name: Deploy website
on:
  push:
    branches:
      - main
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v4
      - name: Get pip cache dir
        id: pip-cache
        shell: bash
        run: |
          echo "dir=$(pip cache dir)" >> $GITHUB_OUTPUT
      
      - name: pip cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-s
      - name: npm cache
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: deps-npm-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
      - name: Lint code
        run: npm run lint
      - name: Test code
        run: npm run test
  build:
    needs: test
    runs-on: ubuntu-latest
    outputs:
      script-file: ${{ steps.publish.outputs.script-file  }}
    steps:
      - name: Get code
        uses: actions/checkout@v4
      - name: Get pip cache dir
        id: pip-cache
        shell: bash
        run: |
          echo "dir=$(pip cache dir)" >> $GITHUB_OUTPUT
      
      - name: pip cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-s
      - name: npm cache
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: deps-npm-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
      - name: Build website
        run: npm run build
      - name: create texts
        id: publish
        # find dist/assets/*.js -type f -execdir echo '::set-output name=script-file::{}' ';'
        run: |
          echo howdy > extra-file.txt
          find dist/assets/*.js -type f -execdir echo "script-file={}" \; >> "$GITHUB_OUTPUT"

      - name: upload-artifact
        uses: actions/upload-artifact@v4
        with:
          name: my-artifact
          path: |
            dist
            extra-file.txt
          if-no-files-found: error
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy
        run: echo "Deploying..."
      - name: download-artifact
        uses: actions/download-artifact@v4
        # with:
        #   name: my-artifact
      - name: Display structure of downloaded files
        run: |
          ls -R
          echo "$(<./my-artifact/extra-file.txt )"
      - name: output file name
        run: echo "${{ needs.build.outputs.script-file }}"